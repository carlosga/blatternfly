@namespace Blatternfly.UnitTests.Components

@code {
  [Fact]
  public void DefaultTest()
  {
    // Arrange
    using var ctx = Helper.CreateTestContext();

    // Act
    var cut = ctx.Render(@<ActionGroup><div>Hello</div></ActionGroup>);

    // Assert
    cut.MarkupMatches(
@"
<div
  class=""pf-c-form__group pf-m-action""
>
  <div
    class=""pf-c-form__group-control""
  >
    <div
      class=""pf-c-form__actions""
    >
      <div>
        Hello
      </div>
    </div>
  </div>
</div>
");
  }

  [Fact]
  public void IsHorizontalTest()
  {
    using var ctx = Helper.CreateTestContext();
    var editContext = new EditContext(new object());

    var cut = ctx.Render(@<Form EditContext="@editContext" IsHorizontal="true"><ActionGroup /></Form>);

    // Assert
    cut.MarkupMatches(
@"
<form
  class=""pf-c-form pf-m-horizontal""
  noValidate=""""
>
  <div
    class=""pf-c-form__group pf-m-action""
  >
    <div
      class=""pf-c-form__group-control""
    >
      <div
        class=""pf-c-form__actions""
      />
    </div>
  </div>
</form>
");
  }
}