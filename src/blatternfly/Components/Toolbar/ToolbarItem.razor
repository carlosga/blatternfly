@namespace Blatternfly.Components

@if (Variant is ToolbarItemVariant.Separator)
{
  <Divider @attributes="AdditionalAttributes" IsVertical />
}
else
{
  <div
    @attributes="AdditionalAttributes"
    class="@CssClass"
    aria-hidden="@AriaHidden"
    id="@InternalId"
    style="@WidthsStyle"
  >
    @ChildContent
  </div>
}

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  /// Parent Page component.
  [CascadingParameter] public Page ParentPage { get; set; }

  /// A type modifier which modifies spacing specifically depending on the type of item.
  [Parameter] public ToolbarItemVariant? Variant { get; set; }

  /// Visibility at various breakpoints.
  [Parameter] public VisibilityModifiers Visibility { get; set; }

  /// Alignment at various breakpoints.
  [Parameter] public AlignmentModifiers Alignment { get; set; }

  /// Spacers at various breakpoints.
  [Parameter] public ToolbarSpacerModifiers ToolbarSpacer { get; set;}

  /// Widths at various breakpoints.
  [Parameter] public ToolbarItemWidthModifiers Widths { get; set; }

  /// Flag indicating if the expand-all variant is expanded or not.
  [Parameter] public bool IsAllExpanded { get; set; }

  private string CssClass => new CssBuilder("pf-c-toolbar__item")
    .AddClass("pf-m-bulk-select"  , Variant is ToolbarItemVariant.BulkSelect)
    .AddClass("pf-m-overflow-menu", Variant is ToolbarItemVariant.OverflowMenu)
    .AddClass("pf-m-pagination"   , Variant is ToolbarItemVariant.Pagination)
    .AddClass("pf-m-search-filter", Variant is ToolbarItemVariant.SearchFilter)
    .AddClass("pf-m-search-label" , Variant is ToolbarItemVariant.Label)
    .AddClass("pf-c-chip-group"   , Variant is ToolbarItemVariant.ChipGroup)
    .AddClass("pf-m-expand-all"   , Variant is ToolbarItemVariant.ExpandAll)
    .AddClass("pf-m-expanded"     , IsAllExpanded)
    .AddClass(Visibility?.CssClass(ParentPage?.WidthBreakpoint))
    .AddClass(Alignment?.CssClass(ParentPage?.WidthBreakpoint))
    .AddClass(ToolbarSpacer?.CssClass(ParentPage?.WidthBreakpoint))
    .AddClassFromAttributes(AdditionalAttributes)
    .Build();

  private string InternalId  { get => AdditionalAttributes.GetPropertyValue(HtmlAttributes.Id); }
  private string AriaHidden  { get => Variant is ToolbarItemVariant.Label ? "true" : null; }
  private string WidthsStyle { get => Widths?.CssStyle; }
}
