@namespace Blatternfly.Components

<div @attributes="AdditionalAttributes" class="@CssClass" style="@Style">
  @ChildContent
</div>
@if (Footer is not null)
{
  <div class="pf-c-select__menu-footer">
    @Footer
  </div>
}

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  /// Flag indicating that the children is custom content to render inside the SelectMenu.
  /// If true, variant prop is ignored.
  [Parameter] public bool IsCustomContent { get; set; }

  /// Flag indicating the Select is expanded.
  [Parameter] public bool IsExpanded { get; set; }

  /// Flag indicating the Select options are grouped.
  [Parameter] public bool IsGrouped { get; set; }

  /// Currently selected option (for single, typeahead variants).
  [Parameter] public string Selected {  get; set; }

  /// @hide Internal flag for specifying how the menu was opened.
  [Parameter] public bool OpenedOnEnter { get; set; }

  /// Flag to specify the  maximum height of the menu, as a string percentage or number of pixels.
  [Parameter] public string MaxHeight { get; set; }

  /// Indicates where menu will be alligned horizontally.
  [Parameter] public SelectPosition Position { get; set; } = SelectPosition.Left;

  /// Content rendered in the footer of the select menu.
  [Parameter] public RenderFragment Footer { get; set; }

  /// @hide Internal callback for keyboard navigation.
  [Parameter] public Action<int, int, string> KeyHandler { get; set; }

  private string CssClass => new CssBuilder()
    .AddClass("pf-c-select__menu"     , Footer is null)
    .AddClass("pf-c-select__menu-list", Footer is not null)
    .AddClass("pf-m-align-right"      , Position is SelectPosition.Right)
    .Build();

  private string Style { get => "overflow: 'auto';" + (!string.IsNullOrEmpty(MaxHeight) ? $"max-height: {MaxHeight}" : ""); }
}