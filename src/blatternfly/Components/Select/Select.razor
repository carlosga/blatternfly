@namespace Blatternfly.Components

<CascadingValue Value="this" IsFixed="true">
  <div
    class="@CssClass"
    style="@CssStyle"
    aria-describedby="@InternalAriaDescribedBy"
    aria-invalid="@InternalAriaInvalid"
  >
    <SelectToggle
      Id="@SelectToggleId"
      IsOpen="@IsOpen"
      IsPlain="@IsPlain"
      HasPlaceholderStyle="@ToogleHasPlaceholderStyle"
      OnToggle="@ToggleHandler"
      OnEnter="@EnterHandler"
      OnClose="@CloseHandler"
      Variant="@Variant"
      aria-labelledby="@InternalAriaLabelledBy"
      aria-label="@ToggleAriaLabel"
      IsDisabled="@IsDisabled"
      HasClearButton="@HasOnClear"
      HasFooter="@HasFooter"
    >
      @if (CustomContent is not null)
      {
        <div class="pf-c-select__toggle-wrapper">
          @if (ToggleIcon is not null)
          {
            <span class="pf-c-select__toggle-icon">@ToggleIcon</span>
          }
          <span class="pf-c-select__toggle-text">@PlaceholderText</span>
        </div>
      }
      @if (Variant == SelectVariant.Single && CustomContent is null)
      {
        <div class="pf-c-select__toggle-wrapper">
          @if (ToggleIcon is not null)
          {
            <span class="pf-c-select__toggle-icon">@ToggleIcon</span>
          }
          <span class="pf-c-select__toggle-text">
            @PlaceholderText
          </span>
        </div>
        @if (HasOnClear && HasAnySelections)
        {
          <button
            class="pf-c-button pf-m-plain pf-c-select__toggle-clear"
            @onclick="@ClearHandler"
            @onclick:stopPropagation="true"
            aria-label="@ClearSelectionsAriaLabel"
            type="button"
            disabled="@IsDisabled"
            @onkeydown="OnClearKeyDown"
            @onkeydown:stopPropagation="true"
          >
            <TimesCircleIcon aria-hidden />
          </button>
        }
      }
      @if (Validated == ValidatedOptions.Success)
      {
        <span class="pf-c-select__toggle-status-icon">
          <CheckCircleIcon aria-hidden="true" />
        </span>
      }
      @if (Validated == ValidatedOptions.Error)
      {
        <span class="pf-c-select__toggle-status-icon">
          <ExclamationCircleIcon aria-hidden="true" />
        </span>
      }
      @if (Validated == ValidatedOptions.Warning)
      {
        <span class="pf-c-select__toggle-status-icon">
          <ExclamationTriangleIcon aria-hidden="true" />
        </span>
      }
    </SelectToggle>
    @if (IsOpen && MenuAppendTo == "inline")
    {
      @if (Footer is not null)
      {
        <div class="pf-c-select__menu">
          <SelectMenu
            IsGrouped="@IsGrouped"
            Selected="@Selections"
            OpenedOnEnter="@OpenedOnEnter"
            aria-label="@AriaLabel"
            aria-labelledby="@AriaLabelledBy"
            KeyHandler="@HandleMenuKeys"
            MaxHeight="@MaxHeight"
            Footer="@Footer"
          >
            @ChildContent
          </SelectMenu>
        </div>
      }
      else
      {
        <SelectMenu
          IsGrouped="@IsGrouped"
          Selected="@Selections"
          OpenedOnEnter="@OpenedOnEnter"
          aria-label="@AriaLabel"
          aria-labelledby="@AriaLabelledBy"
          KeyHandler="@HandleMenuKeys"
          MaxHeight="@MaxHeight"
          footer="@Footer"
          Position="@Position"
        >
          @ChildContent
        </SelectMenu>
      }
    }
  </div>
</CascadingValue>