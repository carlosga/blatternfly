@namespace Blatternfly.Components

<Form Model="@Model" @attributes="AdditionalAttributes">
  @if (HelperTextIcon is null)
  {
    <FormHelperText IsError="@IsHelperTextError" IsHidden="@IsHelperTextHidden">
      @HelperText
    </FormHelperText>
  }
  else
  {
    <FormHelperText IsError="@IsHelperTextError" IsHidden="@IsHelperTextHidden">
      <Icon>@HelperTextIcon</Icon>
      <ChildContent>@HelperText</ChildContent>
    </FormHelperText>
  }
  <FormGroup Label="@UsernameLabel" IsRequired Validated="@UsernameValidation" FieldId="pf-login-username-id">
    <TextInput
      autofocus="@AutoFocus"
      id="pf-login-username-id"
      name="pf-login-username-id"
      Type="TextInputTypes.Text"
      IsRequired
      Validated="@UsernameValidation"
      Value="@Model.UsernameValue"
      ValueExpression="@(() => Model.UsernameValue)"
      ValueChanged="@OnChangeUsername"
      @ref="UsernameInput"
    />
  </FormGroup>
  <FormGroup Label="@PasswordLabel" IsRequired Validated="@PasswordValidation" FieldId="pf-login-password-id">
    @if (IsShowPasswordEnabled)
    {
      <InputGroup>
        <TextInput
          IsRequired
          Type="@PasswordInputType"
          id="pf-login-password-id"
          name="pf-login-password-id"
          Validated="@PasswordValidation"
          Value="@Model.PasswordValue"
          ValueExpression="@(() => Model.PasswordValue)"
          ValueChanged="@OnChangePassword"
        />
        <Button
          Variant="ButtonVariant.Control"
          OnClick="@SetPasswordHidden"
          AriaLabel="@ShowPasswordButtonAriaLabel"
        >
          @if (PasswordHidden)
          {
            <EyeIcon/>
          }
          else
          {
            <EyeSlashIcon/>
          }
        </Button>
      </InputGroup>
    }
    else
    {
      <TextInput
        IsRequired="true"
        Type="@PasswordInputType"
        id="pf-login-password-id"
        name="pf-login-password-id"
        Validated="@PasswordValidation"
        Value="@Model.PasswordValue"
        ValueExpression="@(() => Model.PasswordValue)"
        ValueChanged="@OnChangePassword"
      />
    }
  </FormGroup>
  @if (!string.IsNullOrEmpty(RememberMeLabel))
  {
    <FormGroup fieldId="pf-login-remember-me-id">
      <Checkbox
        id="pf-login-remember-me-id"
        Label="@RememberMeLabel"
        Value="@Model.IsRememberMeCheckedValue"
        ValueExpression="@(() => Model.IsRememberMeCheckedValue)"
        ValueChanged="@OnChangeRememberMe"
      />
    </FormGroup>
  }
  <ActionGroup>
    <Button
      OnClick="@OnLoginButtonClick"
      Variant="ButtonVariant.Primary"
      Type="ButtonType.Submit"
      IsDisabled="@IsLoginButtonDisabled"
      IsBlock
    >
      @LoginButtonLabel
    </Button>
  </ActionGroup>
</Form>