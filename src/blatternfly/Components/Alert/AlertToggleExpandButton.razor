@namespace Blatternfly.Components

<Button
  Variant="ButtonVariant.Plain"
  OnClick="@OnToggleExpand"
  aria-expanded="@IsExpanded"
  AriaLabel="@AriaLabelValue"
  @attributes="AdditionalAttributes"
>
  <span class="pf-c-alert__toggle-icon">
    <AngleRightIcon aria-hidden="true" />
  </span>
</Button>

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Parent alert component.
  [CascadingParameter] public Alert Parent { get; set; }

  /// Aria label for the toggle button.
  [Parameter] public string AriaLabel { get; set; }

  /// A callback for when the toggle button is clicked.
  [Parameter] public EventCallback<MouseEventArgs> OnToggleExpand { get; set; }

  /// Flag to indicate if the content is expanded.
  [Parameter] public bool IsExpanded { get; set; }

  /// Variant label for the toggle button.
  [Parameter] public string VariantLabel { get; set; }

  private string AriaLabelValue
  {
    get => string.IsNullOrEmpty(AriaLabel)
      ? $"Toggle {VariantLabel ?? Parent.VariantLabel} alert: {Parent.Title}"
        : AriaLabel;
  }
}