@namespace Blatternfly.Components
@inject ISequentialIdGenerator SequentialIdGenerator

<section @attributes="AdditionalAttributes" class="@CssClass" aria-labelledby="@GroupId" id="@SectionId">
  @if (!string.IsNullOrEmpty(Title))
  {
    <h2 class="pf-c-nav__section-title" id="@GroupId">@Title</h2>
  }
  <ul class="pf-c-nav__list">@ChildContent</ul>
</section>

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  /// Parent Nav control
  [CascadingParameter] public Nav Parent { get; set; }

  /// Title shown for the group.
  [Parameter] public string Title { get; set; }

  private string CssClass => new CssBuilder("pf-c-nav__section")
    .AddClassFromAttributes(AdditionalAttributes)
    .Build();

  private string _id;
  private string InternalId  { get => AdditionalAttributes.GetPropertyValue(HtmlAttributes.Id); }
  private string GroupId     { get => !string.IsNullOrEmpty(InternalId) ? InternalId : _id; }
  private string SectionId   { get => null; }

  protected override void OnInitialized()
  {
    base.OnInitialized();

    _id = SequentialIdGenerator.GenerateId("pf-c-nav__section");
  }

  protected override void OnParametersSet()
  {
    base.OnParametersSet();

    var ariaLabel = AdditionalAttributes.GetPropertyValue("aria-label");

    if (string.IsNullOrEmpty(Title) && string.IsNullOrEmpty(ariaLabel))
    {
      throw new InvalidOperationException("NavGroup: For accessibility reasons an aria-label should be specified on nav groups if a title isn't");
    }
  }
}