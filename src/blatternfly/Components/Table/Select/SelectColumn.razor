@namespace Blatternfly.Components

<label>
  <input
    @attributes="AdditionalAttributes"
    type="@Variant"
    checked="@IsSelected"
    @onchange="ValueChanged"
    disabled="@DisableSelection"
  />
</label>
@ChildContent

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  [Parameter] public string Name { get; set; }
  [Parameter] public EventCallback<bool> OnSelect { get; set; }
  [Parameter] public RowSelectVariant SelectVariant { get; set; }
  [Parameter] public bool IsSelected { get; set; }
  [Parameter] public bool DisableSelection { get; set; }

  private string Variant
  {
    get => SelectVariant switch
    {
      RowSelectVariant.Checkbox => "checkbox",
      _                         => null
    };
  }

  private async Task ValueChanged(ChangeEventArgs args)
  {
    var value = Convert.ToBoolean(args.Value);

    await OnSelect.InvokeAsync(value);
  }
}