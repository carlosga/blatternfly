@namespace Blatternfly.Components
@using Blatternfly.Interop
@implements IAsyncDisposable
@inject IPortalConnector Connector
@inject IDomUtils DomUtils

@Portal?.ChildContent

@code {
  private Portal Portal { get; set; }

  public async ValueTask DisposeAsync()
  {
    Portal = null;
    Connector.Detach();
    await UpdateModalStateAsync();
  }

  internal bool CanAttach { get => Portal is null; }

  internal async ValueTask ConnectAsync(Portal portal)
  {
    Portal = portal;
    await UpdateModalStateAsync();
    StateHasChanged();
  }

  internal async ValueTask DisconnectAsync()
  {
    Portal = null;
    await UpdateModalStateAsync();
    StateHasChanged();
  }

  protected override void OnInitialized()
  {
    base.OnInitialized();

    Connector.Attach(this);
  }

  private async ValueTask UpdateModalStateAsync()
  {
    // TODO : toggleSiblingsFromScreenReaders
    if (Portal is not null)
    {
      await DomUtils.SetBodyClass("pf-c-backdrop__open");
    }
    else
    {
      await DomUtils.RemoveBodyClass("pf-c-backdrop__open");
    }
  }
}