@namespace Blatternfly.Components
@using System.Globalization

<div
  @attributes="AdditionalAttributes"
  class="@CssClass"
  style="@CssStyle"
  @onmousemove="@HandleMouseMove"
  @onmouseup="@HandleMouseUp"
  @onmouseleave="@HandleMouseLeave"
>
  @if (@LeftActions is not null) { <div class="pf-c-slider__actions">@LeftActions</div> }
  <div class="pf-c-slider__main">
    <div class="pf-c-slider__rail" @ref="SliderRailRef" @onclick="OnSliderRailClick">
      <div class="pf-c-slider__rail-track" />
    </div>
    @if (HasCustomSteps)
    {
      <div class="pf-c-slider__steps" aria-hidden="true">
        @foreach (var stepObj in CustomSteps)
        {
          <SliderStep
            @key="@stepObj.Value"
            Value="@(GetStepValue(stepObj.Value, CustomSteps[0].Value, CustomSteps[^1].Value))"
            Label="@stepObj.Label"
            IsLabelHidden="@stepObj.IsLabelHidden"
            IsActive="@(stepObj.Value <= Value)"
          />
        }
      </div>
    }
    @if (!HasCustomSteps && (ShowTicks || ShowBoundaries))
    {
      <div class="pf-c-slider__steps" aria-hidden="true">
        @for (decimal i = Min, stepValue = 0.0M; i <= Max; i += Step, stepValue = ((i - Min) * 100) / (Max - Min))
        {
          @if (!ShowTicks && ShowBoundaries && i == Min && i != Max)
          {
            continue;
          }

          <SliderStep
            @key="i"
            Value="@stepValue"
            Label="@i.ToString(CultureInfo.InvariantCulture)"
            IsTickHidden="@(!ShowTicks)"
            IsLabelHidden="@((i == Min || i == Max) && ShowBoundaries ? false : true)"
            IsActive="@(i <= Value)"
          />
        }
      </div>
    }
    <div
      class="pf-c-slider__thumb"
      @ref="ThumbRef"
      tabindex="@TabIndex"
      role="slider"
      aria-valuemin="@AriaValueMin"
      aria-valuemax="@AriaValueMax"
      aria-valuenow="@AriaValueNow"
      aria-valuetext="@AriaValueText"
      aria-label="@ThumbAriaLabel"
      aria-disabled="@AriaDisabled"
      aria-describedby="@AriaDescribedBy"
      aria-labelledby="@AriaLabelledBy"
      style="@ThumbStyle"
      @onmousedown="@HandleMouseDown"
      @onmousedown:stopPropagation="true"
      @onmousedown:preventDefault="true"
      @onmouseup="@HandleMouseUp"
      @onkeydown="@HandleThumbKeys"
      @onkeydown:preventDefault="true"
      @onclick="@OnThumbClick"
    />
    @if (IsInputVisible && InputPosition == SliderInputPosition.AboveThumb)
    {
      <div class="pf-c-slider__value pf-m-floating">
        @if (!string.IsNullOrEmpty(InputLabel))
        {
          <InputGroup>
            <NumberInput
              Variant="NumberInputVariant.NoStepButtons"
              class="pf-c-form-control"
              IsDisabled="@IsDisabled"
              type="number"
              @bind-Value="@InputValue"
              InputAriaLabel="@InputAriaLabel"
              @onkeydown="@HandleKeyPressOnInput"
              @onblur="OnBlur"
            />
            <InputGroupText Variant="InputGroupTextVariant.Plain">@InputLabel</InputGroupText>
          </InputGroup>
        }
        else
        {
          <NumberInput
            Variant="NumberInputVariant.NoStepButtons"
            class="pf-c-form-control"
            IsDisabled="@IsDisabled"
            type="number"
            @bind-Value="@InputValue"
            InputAriaLabel="@InputAriaLabel"
            @onkeydown="@HandleKeyPressOnInput"
            @onblur="OnBlur"
          />
        }
      </div>
    }
  </div>
  @if (IsInputVisible && InputPosition is SliderInputPosition.Right)
  {
    <div class="pf-c-slider__value">
      @if (!string.IsNullOrEmpty(InputLabel))
      {
        <InputGroup>
          <NumberInput
            Variant="NumberInputVariant.NoStepButtons"
            class="pf-c-form-control"
            IsDisabled="@IsDisabled"
            type="number"
            @bind-Value="@InputValue"
            InputAriaLabel="@InputAriaLabel"
            @onkeydown="@HandleKeyPressOnInput"
            @onblur="OnBlur"
          >
            @InputLabel
          </NumberInput>
          <InputGroupText Variant="InputGroupTextVariant.Plain">@InputLabel</InputGroupText>
        </InputGroup>
      }
      else
      {
        <NumberInput
          Variant="NumberInputVariant.NoStepButtons"
          class="pf-c-form-control"
          IsDisabled="@IsDisabled"
          type="number"
          @bind-Value="@InputValue"
          InputAriaLabel="@InputAriaLabel"
          @onkeydown="@HandleKeyPressOnInput"
          @onblur="OnBlur"
        >
          @InputLabel
        </NumberInput>
      }
    </div>
  }

  @if (RightActions is not null) { <div class="pf-c-slider__actions">@RightActions</div> }
</div>