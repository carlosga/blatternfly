@namespace Blatternfly.Components

@typeparam TItem

@if (Items is not null && Items.Count > 0)
{
  <div
    class="@CssClass"
    role="group"
    aria-labelledby="@AriaLabelledByValue"
    aria-label="@AriaLabelValue"
  >
    <div class="pf-c-chip-group__main">
      @if (!string.IsNullOrEmpty(CategoryName))
      {
        @if (IsTooltipVisible)
        {
          <Tooltip id="@TooltipId" Reference="@ChipGroupId" Position="@TooltipPosition">
            <Content>
              @CategoryName
            </Content>
            <ChildContent>
              <span
                tabindex="0"
                class="pf-c-chip-group__label"
                aria-label="@CategoryName"
                @ref="HeadingRef"
              >
                <span aria-hidden="true" id="@ChipGroupId">@CategoryName</span>
              </span>
            </ChildContent>
          </Tooltip>
        }
        else
        {
          <span
            class="pf-c-chip-group__label"
            aria-hidden="true"
            id="@ChipGroupId"
            @ref="HeadingRef"
          >
            @CategoryName
          </span>
        }
      }
      <ul
        class="pf-c-chip-group__list"
        aria-labelledby="@AriaLabelledByValue"
        aria-label="@AriaLabelValue"
        role="list"
      >
        @foreach (var item in Slice)
        {
          <li class="pf-c-chip-group__list-item" @key="item">
            @ItemTemplate(item)
          </li>
        }
        @if (Items.Count > NumChips)
        {
          <li class="pf-c-chip-group__list-item">
            <Chip
              IsOverflowChip
              OnClick="@OnOverflowChipClicked"
              Component="button"
            >
              @if (IsOpen)
              {
                @ExpandedText
              }
              else
              {
                @CollapsedTextResult
              }
            </Chip>
          </li>
        }
      </ul>
    </div>
    @if (IsClosable)
    {
      <div class="pf-c-chip-group__close">
        <Button
          Variant="ButtonVariant.Plain"
          AriaLabel="@CloseBtnAriaLabel"
          OnClick="@OnClick"
          id="@CloseButtonId"
          aria-labelledby="@CloseButtonAriaLabelledBy"
        >
          <TimesCircleIcon aria-hidden="true" />
        </Button>
      </div>
    }
  </div>
}
