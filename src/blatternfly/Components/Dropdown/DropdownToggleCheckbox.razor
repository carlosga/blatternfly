@namespace Blatternfly.Components

<label @attributes="AdditionalAttributes" class="@CssClass" for="@InternalId">
  <input type="checkbox" aria-invalid="@IsInvalid" disabled="@IsDisabled" checked="@IsChecked" />
  @if (ChildContent is not null)
  {
    <span class="pf-c-dropdown__toggle-text" aria-hidden="true" id="@InternalId-text">@ChildContent</span>
  }
</label>

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  /// Flag to show if the checkbox selection is valid or invalid.
  [Parameter] public bool IsValid { get; set; } = true;

  /// Flag to show if the checkbox is disabled.
  [Parameter] public bool IsDisabled { get; set; }

  /// Flag to show if the checkbox is checked.
  [Parameter] public bool IsChecked { get; set; }

  private string CssClass => new CssBuilder("pf-c-dropdown__toggle-check")
    .AddClassFromAttributes(AdditionalAttributes)
    .Build();

  private string InternalId { get => AdditionalAttributes.GetPropertyValue(HtmlAttributes.Id); }

  private bool IsInvalid { get => !IsValid; }
}