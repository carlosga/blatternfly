@namespace Blatternfly.Components

<CascadingValue Value="this" IsFixed="true">
  <ul
    @attributes="AdditionalAttributes"
    class="@CssClass"
    aria-label="@AriaLabel"
  >
    @ChildContent
  </ul>
</CascadingValue>

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  /// Adds accessible text to the DataList list.
  [Parameter] public string AriaLabel { get; set; }

  /// Optional callback to make DataList selectable, fired when DataListItem selected.
  [Parameter] public EventCallback<string> OnSelectDataListItem { get; set; }

  /// Id of DataList item currently selected.
  [Parameter] public string SelectedDataListItemId { get; set; }

  /// Flag indicating if DataList should have compact styling.
  [Parameter] public bool IsCompact { get; set; }

  /// Specifies the grid breakpoints .
  [Parameter] public DataListGridBreakpoint GridBreakpoint { get; set; } = DataListGridBreakpoint.Medium;

  /// Determines which wrapping modifier to apply to the DataList.
  [Parameter] public DataListWrapModifier? WrapModifier { get; set; }

  private string CssClass => new CssBuilder("pf-c-data-list")
    .AddClass("pf-m-compact"   , IsCompact)
    .AddClass("pf-m-grid-none" , GridBreakpoint is DataListGridBreakpoint.None)
    .AddClass("pf-m-grid"      , GridBreakpoint is DataListGridBreakpoint.Always)
    .AddClass("pf-m-grid-sm"   , GridBreakpoint is DataListGridBreakpoint.Small)
    .AddClass("pf-m-grid-md"   , GridBreakpoint is DataListGridBreakpoint.Medium)
    .AddClass("pf-m-grid-lg"   , GridBreakpoint is DataListGridBreakpoint.Large)
    .AddClass("pf-m-grid-xl"   , GridBreakpoint is DataListGridBreakpoint.ExtraLarge)
    .AddClass("pf-m-grid-2xl"  , GridBreakpoint is DataListGridBreakpoint.ExtraLarge2)
    .AddClass("pf-m-nowrap"    , WrapModifier   is DataListWrapModifier.Nowrap)
    .AddClass("pf-m-truncate"  , WrapModifier   is DataListWrapModifier.Truncate)
    .AddClass("pf-m-break-word", WrapModifier   is DataListWrapModifier.BreakWord)
    .AddClassFromAttributes(AdditionalAttributes)
    .Build();

  internal async Task SelectItem(string id)
  {
    SelectedDataListItemId = id;
    await OnSelectDataListItem.InvokeAsync(id);
  }
}