@namespace Blatternfly.Components

<div @attributes="AdditionalAttributes" class="@CssClass" tabindex="@TabIndex">
  @ChildContent
</div>

@code {
  /// Parent page control
  [CascadingParameter] public Page ParentPage { get; set; }

  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  /// Modifier indicating if the PageBreadcrumb is sticky to the top or bottom at various breakpoints.
  [Parameter] public StickyPositionModifiers StickyOnBreakpoint { get; set; }

  /// Modifier indicating if PageGroup should have a shadow at the top.
  [Parameter] public bool HasShadowTop { get; set; }

  /// Modifier indicating if PageGroup should have a shadow at the bottom.
  [Parameter] public bool HasShadowBottom { get; set; }

  /// Flag indicating if the PageGroup has a scrolling overflow.
  [Parameter] public bool HasOverflowScroll { get; set; }

  private string CssClass => new CssBuilder("pf-c-page__main-group")
    .AddClass(StickyOnBreakpoint?.CssClass(ParentPage?.HeightBreakpoint))
    .AddClass("pf-m-shadow-top"     , HasShadowTop)
    .AddClass("pf-m-shadow-bottom"  , HasShadowBottom)
    .AddClass("pf-m-overflow-scroll", HasOverflowScroll)
    .AddClassFromAttributes(AdditionalAttributes)
    .Build();

  private string TabIndex { get => HasOverflowScroll ? "0" : null; }
}