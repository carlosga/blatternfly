@namespace Blatternfly.Components
@inherits BaseComponent

<div
  id="page-sidebar"
  @attributes="AdditionalAttributes"
  class="@CssClass"
  aria-hidden="@AriaHidden"
>
  <div class="pf-c-page__sidebar-body">
    @ChildContent
  </div>
</div>

@code {
  /// If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into
  /// the sidebar component or add a callback onNavToggle function into the PageHeader component
  [Parameter] public bool IsManagedSidebar { get; set; }

  /// Programmatically manage if the side nav is shown, if isManagedSidebar is set to true in the Page component, this prop is managed.
  [Parameter] public bool IsNavOpen { get; set; } = true;

  /// Indicates the color scheme of the sidebar.
  [Parameter] public ThemeVariant Theme { get; set; } = ThemeVariant.Dark;

  private string CssClass => new CssBuilder("pf-c-page__sidebar")
    .AddClass("pf-m-light"    , Theme is ThemeVariant.Light)
    .AddClass("pf-m-expanded" , NavOpen)
    .AddClass("pf-m-collapsed", !NavOpen)
    .AddClassFromAttributes(AdditionalAttributes)
    .Build();

  private bool   ManagedIsNavOpen { get => IsManagedSidebar && IsNavOpen; }
  private bool   NavOpen          { get => IsManagedSidebar ? ManagedIsNavOpen : IsNavOpen; }
  private string AriaHidden       { get => !NavOpen ? "true" : "false"; }
}