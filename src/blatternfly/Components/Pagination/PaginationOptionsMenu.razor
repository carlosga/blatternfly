@namespace Blatternfly.Components

<Dropdown
  Direction="@DropDirection"
  IsOpen="@IsOpen"
  IsPlain="true"
  OnSelect="@HandleNewPerPage"
  BaseClass="pf-c-options-menu"
  MenuClass="pf-c-options-menu__menu"
  ItemClass="pf-c-options-menu__menu-item"
>
  <Toggle>
    <OptionsToggle
      OptionsToggleText="@OptionsToggle"
      ItemsPerPageTitle="@ItemsPerPageTitle"
      ShowToggle="@ShowToggle"
      OnToggle="@OnToggle"
      OnEnter="@OnEnter"
      IsOpen="@IsOpen"
      WidgetId="@WidgetId"
      OptionsToggleId="@OptionsToggleId"
      FirstIndex="@FirstIndex"
      LastIndex="@LastIndex"
      ItemCount="@ItemCount"
      ItemsTitle="@ItemsTitle"
      OfWord="@OfWord"
      ToggleTemplate="@ToggleTemplate"
      IsDisabled="@IsDisabled"
      PerPageComponent="@PerPageComponent"
      ToggleTextClass="pf-c-options-menu__toggle-text"
      ToggleIndicatorClass="@ToggleIndicatorClass"
    />
  </Toggle>

  <DropdownItems>
    @if (PerPageOptions is not null && PerPageOptions.Any())
    {
      foreach (var pageOptions in PerPageOptions)
      {
        <DropdownItem
          @key="pageOptions.Value"
          value="@pageOptions.Value.ToString()"
          Component="button"
          data-action="@pageOptions.Action"
          class="@(PerPage == pageOptions.Value ? "pf-m-selected" : null)"
        >
          @pageOptions.Title
          @PerPageSuffix
          @if (PerPage == pageOptions.Value)
          {
            <div class="pf-c-options-menu__menu-item-icon">
              <CheckIcon />
            </div>
          }
        </DropdownItem>
      }
    }
  </DropdownItems>
</Dropdown>