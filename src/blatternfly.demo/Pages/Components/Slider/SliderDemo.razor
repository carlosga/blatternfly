@page "/components/slider"

<TextContent>
  <Title class="pf-u-mb-md">Slider</Title>
  <Text class="pf-u-mb-md">
    A <strong>slider</strong> provides a quick and effective way for users to set and adjust a numeric value from a defined range of values.
  </Text>
  <Text class="pf-u-mb-md">
    See the <a target="_blank" href="https://www.patternfly.org/v4/components/slider/design-guidelines">PatternFly design guidelines</a> for more details.
  </Text>
</TextContent>

<Flex>
  <FlexItem Component="nav" class="ws-toc">
    <Title Size="TitleSizes.Large">Table of contents</Title>
    <JumpLinks IsVertical ScrollableSelector=".pf-c-page__main" OffsetSelector=".pf-c-page__header">
      <JumpLinksItem Href="#examples">
        <ChildContent>Examples</ChildContent>
        <SubLists>
          <JumpLinksList>
            <JumpLinksItem Href="#discrete">Discrete</JumpLinksItem>
            <JumpLinksItem Href="#continuous">Continuous</JumpLinksItem>
            <JumpLinksItem Href="#thumb-value-input">Thumb value input</JumpLinksItem>
            <JumpLinksItem Href="#disabled">Disabled</JumpLinksItem>
          </JumpLinksList>
        </SubLists>
      </JumpLinksItem>
    </JumpLinks>
  </FlexItem>
  <FlexItem Grow="@(new FlexGrow { Default = true })">
    <Title id="examples" Size="TitleSizes.Large">Examples</Title>

    <section id="discrete" class="example-section">
      <Title Size="TitleSizes.Large">Discrete</Title>
      <SliderDiscrete />
    </section>

    <section id="continuous" class="example-section">
      <Title Size="TitleSizes.Large">Continuous</Title>
      <SliderContinuous />
    </section>

    <section id="thumb-value-input" class="example-section">
      <Title Size="TitleSizes.Large">Thumb value input</Title>
      <SliderThumbValueInput />
    </section>

    <section id="disabled" class="example-section">
      <Title Size="TitleSizes.Large">Disabled</Title>
      <SliderDisabled />
    </section>
  </FlexItem>
</Flex>

@* @code {
  private readonly SliderStepObject[] _steps =
  {
    new() { Value = 0.0M   , Label = "0" },
    new() { Value = 12.5M  , Label = "1", IsLabelHidden = true },
    new() { Value = 25.0M  , Label = "2" },
    new() { Value = 37.5M  , Label = "3", IsLabelHidden = true },
    new() { Value = 50.0M  , Label = "4" },
    new() { Value = 62.5M  , Label = "5", IsLabelHidden = true },
    new() { Value = 75.0M  , Label = "6" },
    new() { Value = 87.5M  , Label = "7", IsLabelHidden = true },
    new() { Value = 100.0M , Label = "8" }
  };

  private readonly SliderStepObject[] _stepsDiscreteWithMax =
  {
    new() { Value = 0M, Label = "A" },
    new() { Value = 1M, Label = "B" },
    new() { Value = 2M, Label = "C" },
    new() { Value = 3M, Label = "D" },
    new() { Value = 4M, Label = "E" },
    new() { Value = 5M, Label = "F" }
  };

  private SliderStepObject Step { get => _steps.SingleOrDefault(step => step.Value == Value1); }
  private string DisplayValue { get => Step?.Label ?? "0"; }
} *@