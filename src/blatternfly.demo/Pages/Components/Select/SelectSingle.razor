<div>
  <span id="@TitleId" hidden>
    Title
  </span>
  <Select
    Variant="SelectVariant.Single"
    AriaLabel="Select Input"
    OnToggle="@OnToggle"
    OnSelect="@OnSelect"
    Selections="@Selected"
    IsOpen="@IsOpen"
    aria-labelledby="@TitleId"
    IsDisabled="@IsDisabled"
    Direction="@Direction"
    PlaceholderText="Select a title"
  >
    <ToggleIcon>
      @if (IsToggleIcon)
      {
          <CubeIcon />
      }
    </ToggleIcon>
    <ChildContent>
      <SelectOption @key="0" Value="Select a title" IsPlaceholder="true" />
      <SelectOption @key="1" Value="Mr" />
      <SelectOption @key="2" Value="Miss" />
      <SelectOption @key="3" Value="Mrs" />
      <SelectOption @key="4" Value="Ms" />
      <Divider      @key="5" Component="DividerVariant.li" />
      <SelectOption @key="6" Value="Dr" />
      <SelectOption @key="7" Value="Other" />
    </ChildContent>
  </Select>
  <Checkbox
    label="isDisabled"
    AriaLabel="disabled checkbox"
    id="toggle-disabled"
    name="toggle-disabled"
    @bind-Value="@IsDisabled"
  />
  <Checkbox
    label="Expands up"
    AriaLabel="direction checkbox"
    id="toggle-direction"
    name="toggle-direction"
    @bind-Value="@DirectionUp"
  />
  <Checkbox
    label="Show icon"
    AriaLabel="show icon checkbox"
    id="toggle-icon"
    name="toggle-icon"
    @bind-Value="@IsToggleIcon"
  />
</div>


@code {
  public string TitleId => "title-id-1";

  public bool            IsToggleIcon { get; set; }
  public bool            IsOpen       { get; set; }
  public string          Selected     { get; set; }
  public bool            IsDisabled   { get; set; }
  public SelectDirection Direction    { get; set; } = SelectDirection.Down;

  private bool _directionUp;
  public bool DirectionUp
  {
    get => _directionUp;
    set
    {
      _directionUp = value;
      Direction = value ? SelectDirection.Up : SelectDirection.Down;
    }
  }

  public void OnToggle(bool isOpen) => IsOpen = isOpen;

  public void OnSelect(SelectOption selection)
  {
    if (selection.IsPlaceholder)
    {
      ClearSelection();
    }
    else
    {
      Selected = selection.Value;
      IsOpen = false;
    }
  }

  public void ClearSelection()
  {
    Selected = null;
    IsOpen   = false;
  }
}