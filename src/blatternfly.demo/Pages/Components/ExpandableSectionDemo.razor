@page "/components/expandable-section"

<TextContent>
  <Title class="pf-u-mb-md">Expandable section</Title>
  <Text class="pf-u-mb-md">
    An <strong>expandable section</strong> component is used to support progressive disclosure in a form or page by hiding additional content when you donâ€™t want it to be shown by default.
  </Text>
  <Text class="pf-u-mb-md">
    See the <a target="_blank" href="https://www.patternfly.org/v4/components/expandable-section/design-guidelines">PatternFly design guidelines</a> for more details.
  </Text>
</TextContent>

<section class="example-section">
  <Title Size="TitleSizes.Large">Basic</Title>
  <ExpandableSection
    ToggleText="@Expandable1.ToggleText"
    OnToggle="@Expandable1.OnToggle"
    IsExpanded="@Expandable1.IsExpanded"
  >
    This content is visible only when the component is expanded.
  </ExpandableSection>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Uncontrolled</Title>
  <ExpandableSection ToggleText="Show more">
    This content is visible only when the component is expanded.
  </ExpandableSection>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Uncontrolled with dynamic toggle text</Title>
  <ExpandableSection ToggleTextExpanded="Show less" ToggleTextCollapsed="Show more">
    This content is visible only when the component is expanded.
  </ExpandableSection>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Detached</Title>
  <Stack HasGutter="true">
    <StackItem>
      <ExpandableSection IsExpanded="@Expandable2.IsExpanded" IsDetached="true" ContentId="@Expandable2.ContentId">
        This content is visible only when the component is expanded.
      </ExpandableSection>
    </StackItem>
    <StackItem>
      <ExpandableSectionToggle
        IsExpanded="@Expandable2.IsExpanded"
        OnToggle="@Expandable2.OnToggle"
        ContentId="@Expandable2.ContentId"
        Direction="ExpandableSectionToggleDirection.Up"
      >
        @Expandable2.ToggleText
      </ExpandableSectionToggle>
    </StackItem>
  </Stack>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Disclosure variation</Title>
  <ExpandableSection
    ToggleText="@Expandable3.ToggleText"
    OnToggle="@Expandable3.OnToggle"
    IsExpanded="Expandable3.IsExpanded"
    DisplaySize="DisplaySize.Large"
    IsWidthLimited
  >
    This content is visible only when the component is expanded.
  </ExpandableSection>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Indented</Title>
  <ExpandableSection
    ToggleText="@Expandable4.ToggleText"
    OnToggle="@Expandable4.OnToggle"
    IsExpanded="Expandable4.IsExpanded"
    IsIndented
  >
    This content is visible only when the component is expanded.
  </ExpandableSection>
</section>

@code {
  private Expandable Expandable1 { get; set; } = new();
  private Expandable Expandable2 { get; set; } = new();
  private Expandable Expandable3 { get; set; } = new();
  private Expandable Expandable4 { get; set; } = new();

  public sealed class Expandable
  {
    public string ContentId { get => "detached-toggle-content"; }

    public bool IsExpanded { get; set; }

    public string ToggleText { get => IsExpanded ? "Show less" : "Show more"; }

    public void OnToggle(bool isExpanded)
    {
      IsExpanded = isExpanded;
    }
  }
}