@page "/components/drawer"

<TextContent>
  <Title class="pf-u-mb-md">Drawer</Title>
  <Text class="pf-u-mb-md">
    A <strong>drawer</strong> is a sliding panel that enters from the right edge of the viewport.
  </Text>
  <Text class="pf-u-mb-md">
    See the <a target="_blank" href="https://www.patternfly.org/v4/components/drawer/design-guidelines">PatternFly design guidelines</a> for more details.
  </Text>
</TextContent>

<section class="example-section">
  <Title Size="TitleSizes.Large">Basic</Title>
  <Button aria-expanded="@_drawer1.IsExpanded" OnClick="@_drawer1.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer1.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer1.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer1.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Panel on right</Title>
  <Button aria-expanded="@_drawer2.IsExpanded" OnClick="@_drawer2.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer2.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer2.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer2.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Panel on left</Title>
  <Button aria-expanded="@_drawer3.IsExpanded" OnClick="@_drawer3.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer3.IsExpanded" Position="DrawerPosition.Left">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer3.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer3.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Panel on bottom</Title>
  <Button aria-expanded="@_drawer4.IsExpanded" OnClick="@_drawer4.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer4.IsExpanded" Position="DrawerPosition.Bottom">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer4.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer4.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Basic inline</Title>
  <Button aria-expanded="@_drawer5.IsExpanded" OnClick="@_drawer5.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer5.IsExpanded" IsInline>
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer5.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer5.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Inline panel on right</Title>
  <Button aria-expanded="@_drawer6.IsExpanded" OnClick="@_drawer6.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer6.IsExpanded" IsInline>
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer6.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer6.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Inline panel on left</Title>
  <Button aria-expanded="@_drawer7.IsExpanded" OnClick="@_drawer7.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer7.IsExpanded" IsInline Position="DrawerPosition.Left">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer7.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer7.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Stacked content body elements</Title>
  <Button aria-expanded="@_drawer8.IsExpanded" OnClick="@_drawer8.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer8.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer8.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="_drawer8.OnCloseClick" />
            </DrawerActions>
            drawer-panel
          </DrawerHead>
          <DrawerPanelBody hasNoPadding>drawer-panel with no padding</DrawerPanelBody>
          <DrawerPanelBody>drawer-panel</DrawerPanelBody>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>content-body</DrawerContentBody>
        <DrawerContentBody hasPadding>content-body with padding</DrawerContentBody>
        <DrawerContentBody>content-body</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Modified content padding</Title>
  <Button aria-expanded="@_drawer9.IsExpanded" OnClick="@_drawer9.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer9.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer9.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer9.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody HasPadding>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Modified panel padding</Title>
  <Button aria-expanded="@_drawer10.IsExpanded" OnClick="@_drawer10.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer10.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead HasNoPadding>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer10.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer10.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Additional section above drawer content</Title>
  <Button aria-expanded="@_drawer11.IsExpanded" OnClick="@_drawer11.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer11.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer11.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer11.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerSection>drawer-section</DrawerSection>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Static drawer</Title>
  <Button
    Visibility="@(new Visibility {Medium = Visibilities.Hidden})"
    aria-expanded="@_drawer12.IsExpanded"
    OnClick="_drawer12.OnClick">
    Toggle drawer
  </Button>
  <Drawer IsStatic IsExpanded="@_drawer12.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent>
          <DrawerHead>
            <span>drawer-panel</span>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer12.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Breakpoint</Title>
  <Button aria-expanded="@_drawer13.IsExpanded" OnClick="@_drawer13.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawer13.IsExpanded">
    <DrawerContent>
      <PanelContent>
        <DrawerPanelContent Widths="@(new DrawerWidth { Default = DrawerWidths.W33 })">
          <DrawerHead>
            <h3 class="pf-c-title pf-m-2xl" tabIndex="@(_drawer13.IsExpanded ? 0 : -1)">drawer title</h3>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawer13.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerContentBody>@DrawerContent</DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Panel with light-200 background</Title>
  <Checkbox
    label="Gray panel"
    @bind-Value="_modifiers.GrayPanel"
    AriaLabel="Gray panel checkbox"
    id="toggle-gray-panel"
    name="toggle-gray-panel"
  />
  <Checkbox
    label="Gray content"
    @bind-Value="_modifiers.GrayContent"
    AriaLabel="Gray content checkbox"
    id="toggle-gray-content"
    name="toggle-gray-content"
  />
  <Checkbox
    label="Gray section"
    @bind-Value="_modifiers.GraySection"
    AriaLabel="Gray section checkbox"
    id="toggle-gray-section"
    name="toggle-gray-section"
  />
  <br />
  <Button aria-expanded="@_drawerColorVariants.IsExpanded" OnClick="@_drawerColorVariants.OnClick">Toggle drawer</Button>
  <Drawer IsExpanded="@_drawerColorVariants.IsExpanded">
    <DrawerContent ColorVariant="@ContentColorVariant">
      <PanelContent>
        <DrawerPanelContent ColorVariant="@PanelColorVariant">
          <DrawerHead>
            <span tabIndex="@(_drawerColorVariants.IsExpanded ? 0 : -1)">
              drawer-panel
            </span>
            <DrawerActions>
              <DrawerCloseButton OnClose="@_drawerColorVariants.OnCloseClick" />
            </DrawerActions>
          </DrawerHead>
        </DrawerPanelContent>
      </PanelContent>
      <ChildContent>
        <DrawerSection ColorVariant="@SectionColorVariant">
          drawer-section
        </DrawerSection>
        <DrawerContentBody>
          @DrawerContent
        </DrawerContentBody>
      </ChildContent>
    </DrawerContent>
  </Drawer>
</section>

@code {
  const string DrawerContent =
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pretium est a porttitor vehicula. Quisque vel commodo urna. Morbi mattis rutrum ante, id vehicula ex accumsan ut. Morbi viverra, eros vel porttitor facilisis, eros purus aliquet erat,nec lobortis felis elit pulvinar sem. Vivamus vulputate, risus eget commodo eleifend, eros nibh porta quam, vitae lacinia leo libero at magna. Maecenas aliquam sagittis orci, et posuere nisi ultrices sit amet. Aliquam ex odio, malesuada sed posuere quis, pellentesque at mauris. Phasellus venenatis massa ex, eget pulvinar libero auctor pretium. Aliquam erat volutpat. Duis euismod justo in quam ullamcorper, in commodo massa vulputate.";

  private readonly DrawerModel _drawer1  = new ();
  private readonly DrawerModel _drawer2  = new ();
  private readonly DrawerModel _drawer3  = new ();
  private readonly DrawerModel _drawer4  = new ();
  private readonly DrawerModel _drawer5  = new ();
  private readonly DrawerModel _drawer6  = new ();
  private readonly DrawerModel _drawer7  = new ();
  private readonly DrawerModel _drawer8  = new ();
  private readonly DrawerModel _drawer9  = new ();
  private readonly DrawerModel _drawer10 = new ();
  private readonly DrawerModel _drawer11 = new ();
  private readonly DrawerModel _drawer12 = new ();
  private readonly DrawerModel _drawer13 = new ();

  public sealed class DrawerModel
  {
    public bool IsExpanded { get; set; }

    public void OnClick()
    {
      IsExpanded = !IsExpanded;
    }

    public void OnCloseClick(MouseEventArgs _)
    {
      IsExpanded = false;
    }
  }

  private readonly DrawerModel _drawerColorVariants = new ();

  private DrawerColorVariant SectionColorVariant { get => _modifiers.GraySection ? DrawerColorVariant.Light200 : DrawerColorVariant.Default; }
  private DrawerColorVariant ContentColorVariant { get => _modifiers.GrayContent ? DrawerColorVariant.Light200 : DrawerColorVariant.Default; }
  private DrawerColorVariant PanelColorVariant   { get => _modifiers.GrayPanel   ? DrawerColorVariant.Light200 : DrawerColorVariant.Default; }

  private readonly Modifiers _modifiers = new();
  public class Modifiers
  {
    public bool GrayPanel   { get; set; }
    public bool GrayContent { get; set; }
    public bool GraySection { get; set; }
  }
}