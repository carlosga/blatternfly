<Wizard
  NavAriaLabel="@FormNavAriaLabel"
  MainAriaLabel="@FormMainAriaLabel"
  OnClose="@OnCloseWizard"
  OnSave="@OnSave"
  OnNext="@OnNext"
  OnBack="@OnBack"
  OnGoToStep="@OnGoToStep"
  Height="400"
>
  <WizardStep id="validation-step-1" Index="1" Name="Information"><p>Step 1 content</p></WizardStep>
  <WizardStep
    id="validation-step-2"
    Index="2"
    Name="Configuration"
    EnableNext="@IsFormValid"
    CanJumpTo="FormStepIdReached >= 2"
  >
    <SampleForm Model="@FormModel" IsFormValid="@IsFormValid" OnChange="@OnFormChange" />
  </WizardStep>
  <WizardStep id="validation-step-3" Index="3" Name="Additional" EnableNext="@AllStepsValid" CanJumpTo="FormStepIdReached >= 3">
    <p>Step 3 content</p>
  </WizardStep>
  <WizardStep Id="validation-step-4" Index="4" Name="Review" NextButtonText="Close" CanJumpTo="FormStepIdReached >= 4">
    <p>Step 4 content</p>
  </WizardStep>
</Wizard>

@code {
  public string BasicTitle         => "Basic wizard";
  public string Title              => "Enabled on form validation wizard";
  public string BasicNavAriaLabel  => $"{BasicTitle} steps";
  public string BasicMainAriaLabel => $"{BasicTitle} content";
  public string FormNavAriaLabel   => $"{Title} steps";
  public string FormMainAriaLabel  => $"{Title} content";

  public int FormStepIdReached     { get; set; } = 1;
  public bool IsFormValid          { get; set; }
  public bool AllStepsValid        { get; set; }

  public SampleFormModel FormModel = new () { Age = "Thirty" };

  private int StepIdReached { get; set; } = 1;
  private Task OnIncrementalNext(WizardStepChangedEventArgs args)
  {
    StepIdReached = StepIdReached < args.NewStepIndex.Value ? args.NewStepIndex.Value : StepIdReached;

    return Task.CompletedTask;
  }

  public void AreAllStepsValid()
  {
    AllStepsValid = IsFormValid;
  }

  public Task OnFormChange(SampleFormChangedEventArgs args)
  {
    IsFormValid   = args.IsValid;
    FormModel.Age = args.Value;
    AreAllStepsValid();
    return Task.CompletedTask;
  }

  public Task OnSave()
  {
    return Task.CompletedTask;
  }

  public Task OnNext(WizardStepChangedEventArgs args)
  {
    Console.WriteLine($"current id: {args.NewStepId}, current name: {args.NewStepName}, previous id: {args.PrevStepId}, previous name: {args.PrevStepName}");
    FormStepIdReached = FormStepIdReached < args.NewStepIndex.Value ? args.NewStepIndex.Value : FormStepIdReached;
    Console.WriteLine(FormStepIdReached);
    AreAllStepsValid();
    return Task.CompletedTask;
  }

  public Task OnBack(WizardStepChangedEventArgs args)
  {
    Console.WriteLine($"current id: {args.NewStepId}, current name: {args.NewStepName}, previous id: {args.PrevStepId}, previous name: {args.PrevStepName}");
    AreAllStepsValid();
    return Task.CompletedTask;
  }

  public Task OnGoToStep(WizardStepChangedEventArgs args)
  {
    Console.WriteLine($"current id: {args.NewStepId}, current name: {args.NewStepName}, previous id: {args.PrevStepId}, previous name: {args.PrevStepName}");
    return Task.CompletedTask;
  }

  public Task OnCloseWizard()
  {
		Console.WriteLine("close wizard");
    return Task.CompletedTask;
  }
}