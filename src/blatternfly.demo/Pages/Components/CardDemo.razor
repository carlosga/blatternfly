@page "/components/card"

<TextContent>
  <Title class="pf-u-mb-md">Card</Title>
  <Text class="pf-u-mb-md">
    A <strong>card</strong> is a square or rectangular container that can contain any kind of content.
  </Text>
  <Text class="pf-u-mb-md">
    See the <a target="_blank" href="https://www.patternfly.org/v4/components/card/design-guidelines">PatternFly design guidelines</a> for more details.
  </Text>
</TextContent>

<section class="example-section">
  <Title Size="TitleSizes.Large">Basic</Title>
  <Card>
    <CardTitle>Header</CardTitle>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Modifiers</Title>
  <div style="margin-bottom: 12px">
    <Checkbox id="isHoverable" Label="Hoverable" @bind-Value="@_modifiers.IsHoverable" />
    <Checkbox id="isCompact" Label="Compact" @bind-Value="@_modifiers.IsCompact" />
    <Checkbox id="isFlat" Label="Flat" @bind-Value="@_modifiers.IsFlat" />
    <Checkbox id="isRounded" Label="Rounded" @bind-Value="@_modifiers.IsRounded" />
    <Checkbox id="isLarge" Label="Large" @bind-Value="@_modifiers.IsLarge" />
    <Checkbox id="isFullHeight" Label="Full Height" @bind-Value="@_modifiers.IsFullHeight" />
    <Checkbox id="isPlain" Label="Plain" @bind-Value="@_modifiers.IsPlain" />
  </div>
  <div style="height: 15rem">
    <Card
      IsHoverable  = "@_modifiers.IsHoverable"
      IsCompact    = "@_modifiers.IsCompact"
      IsFlat       = "@_modifiers.IsFlat"
      IsRounded    = "@_modifiers.IsRounded"
      IsLarge      = "@_modifiers.IsLarge"
      IsFullHeight = "@_modifiers.IsFullHeight"
      IsPlain      = "@_modifiers.IsPlain"
    >
      <CardTitle>Header</CardTitle>
      <CardBody>Body</CardBody>
      <CardFooter>Footer</CardFooter>
    </Card>
  </div>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With image and actions</Title>
  <Card>
    <CardHeader>
      <CardHeaderMain>
        <Brand Src="/assets/images/pf_logo.svg" alt="PatternFly logo" style="height: 50px" />
      </CardHeaderMain>
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
        <Checkbox AriaLabel="card checkbox example" id="check-1" name="check1" />
      </CardActions>
    </CardHeader>
    <CardTitle>Header</CardTitle>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Card header in card head</Title>
  <Card>
    <CardHeader>
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
        <Checkbox AriaLabel="card checkbox example" id="check-2" name="check2" />
      </CardActions>
      <CardTitle>
        This is a really really really really really really really really really really long header
      </CardTitle>
    </CardHeader>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Only actions in card head (no header/footer)</Title>
  <Card>
    <CardHeader>
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
        <Checkbox AriaLabel="card checkbox example" id="check-3" name="check3" />
      </CardActions>
    </CardHeader>
    <CardBody>This is the card body. There are only actions in the card head.</CardBody>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Only image in the card head</Title>
  <Card>
    <CardHeader>
      <CardHeaderMain>
        <Brand Src="/assets/images/pf_logo.svg" alt="PatternFly logo" style="height: 50px" />
      </CardHeaderMain>
    </CardHeader>
    <CardTitle>Header</CardTitle>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With no footer</Title>
  <Card>
    <CardTitle>Header</CardTitle>
    <CardBody>This card has no footer</CardBody>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With no header</Title>
  <Card>
    <CardBody>This card has no header</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With only a content section</Title>
  <Card>
    <CardBody>Body</CardBody>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With multiple body sections</Title>
  <Card>
    <CardTitle>Header</CardTitle>
    <CardBody>Body</CardBody>
    <CardBody>Body</CardBody>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With only one body that fills</Title>
  <Card style="min-height: 30em">
    <CardTitle>Header</CardTitle>
    <CardBody IsFilled="false">Body pf-m-no-fill</CardBody>
    <CardBody IsFilled="false">Body pf-m-no-fill</CardBody>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Selectable and selected</Title>
  <Card
    id="first-card"
    @onclick="@OnClick1"
    IsSelectableRaised
    IsSelectedRaised="@IsFirstCardSelected"
  >
    <CardHeader>
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
      </CardActions>
    </CardHeader>
    <CardTitle>First card</CardTitle>
    <CardBody>This is a selectable card. Click me to select me. Click again to deselect me.</CardBody>
  </Card>
  <br />
  <Card
    id="second-card"
    @onclick="@OnClick2"
    IsSelectableRaised
    IsSelectedRaised="@IsSecondCardSelected"
  >
    <CardTitle>Second card</CardTitle>
    <CardBody>This is a selectable card. Click me to select me. Click again to deselect me.</CardBody>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">With heading element</Title>
  <Card>
    <CardTitle Component="h4">Header</CardTitle>
    <CardBody>Body</CardBody>
    <CardFooter>Footer</CardFooter>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Expandable</Title>
  <div style="margin-bottom:12px">
    <Checkbox
      id="isToggleRightAligned"
      @key="1"
      Label="IsToggleRightAligned"
      @bind-Value="IsToggleRightAligned"
    />
  </div>
  <Card id="card1" IsExpanded="@IsExpanded1">
    <CardHeader
      OnExpand="@OnExpand1"
      IsToggleRightAligned="@IsToggleRightAligned"
      ToggleButtonProps="@_toggleButtonProps"
    >
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
        <Checkbox
          AriaLabel="card checkbox example"
          id="check-4"
          name="check4"
        />
      </CardActions>
      <CardTitle id="titleId">Header</CardTitle>
    </CardHeader>
    <CardExpandableContent>
      <CardBody>Body</CardBody>
      <CardFooter>Footer</CardFooter>
    </CardExpandableContent>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Expandable with icon</Title>
  <Card id="image-card" IsExpanded="@IsExpanded2">
    <CardHeader
      OnExpand="@OnExpand2"
      ToggleButtonProps="@_toggleButtonProps"
    >
      <img src="/assets/images/pf-logo-small.svg" alt="PatternFly logo" width="27px" />
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
        <Checkbox
          AriaLabel="card checkbox example"
          id="check-5"
          name="check5"
        />
      </CardActions>
    </CardHeader>
    <CardExpandableContent>
      <CardBody>Body</CardBody>
      <CardFooter>Footer</CardFooter>
    </CardExpandableContent>
  </Card>
</section>

<section class="example-section">
  <Title Size="TitleSizes.Large">Legacy selectable and selected</Title>
  <Card
    id="first-card"
    @onclick="@OnLegacyClick1"
    IsSelectable
    IsSelected="@IsFirstLegacyCardSelected"
  >
    <CardHeader>
      <CardActions>
        <Dropdown
          IsPlain
          Position="DropdownPosition.Right"
        >
          <Toggle>
            <KebabToggle />
          </Toggle>
          <DropdownItems>
            <DropdownItem @key="1">Link</DropdownItem>
            <DropdownItem @key="2" Component="button">Action</DropdownItem>
            <DropdownItem @key="3" IsDisabled>Disabled Link</DropdownItem>
            <DropdownItem @key="4" IsDisabled Component="button">
              Disabled Action
            </DropdownItem>
            <DropdownSeparator @key="5" />
            <DropdownItem @key="6">Separated Link</DropdownItem>
            <DropdownItem @key="7" Component="button">
              Separated Action
            </DropdownItem>
          </DropdownItems>
        </Dropdown>
      </CardActions>
    </CardHeader>
    <CardTitle>First card</CardTitle>
    <CardBody>This is a selectable card. Click me to select me. Click again to deselect me.</CardBody>
  </Card>
  <br />
  <Card
    id="second-card"
    @onclick="@OnLegacyClick2"
    IsSelectable
    IsSelected="@IsSecondLegacyCardSelected"
  >
    <CardTitle>Second card</CardTitle>
    <CardBody>This is a selectable card. Click me to select me. Click again to deselect me.</CardBody>
  </Card>
</section>

@code {
  private readonly Modifiers _modifiers = new();
  private class Modifiers
  {
    public bool IsHoverable  { get; set; }
    public bool IsCompact    { get; set; }
    public bool IsFlat       { get; set; }
    public bool IsRounded    { get; set; }
    public bool IsLarge      { get; set; }
    public bool IsFullHeight { get; set; }
    public bool IsPlain      { get; set; }
  }

  private string _selected;
  private bool IsFirstCardSelected  { get => _selected == "first-card"; }
  private bool IsSecondCardSelected { get => _selected == "second-card"; }

  private void OnClick1(MouseEventArgs args)
  {
    _selected = "first-card";
  }

  private void OnClick2(MouseEventArgs args)
  {
    _selected = "second-card";
  }

  private string _legacySelected;
  private bool IsFirstLegacyCardSelected  { get => _legacySelected == "first-card"; }
  private bool IsSecondLegacyCardSelected { get => _legacySelected == "second-card"; }

  private void OnLegacyClick1(MouseEventArgs args)
  {
    _legacySelected = "first-card";
  }

  private void OnLegacyClick2(MouseEventArgs args)
  {
    _legacySelected = "second-card";
  }

  private bool IsToggleRightAligned { get; set; }
  private bool IsExpanded1 { get; set; }
  private bool IsExpanded2 { get; set; }

  private readonly Dictionary<string, object> _toggleButtonProps = new()
  {
    { "id"              , "toggle-button" },
    { "aria-label"      , "Details" },
    { "aria-labelledby" , "titleId toggle-button" },
  };

  private void OnExpand1(MouseEventArgs args)
  {
    IsExpanded1 = !IsExpanded1;
  }
  private void OnExpand2(MouseEventArgs args)
  {
    IsExpanded2 = !IsExpanded2;
  }
}
