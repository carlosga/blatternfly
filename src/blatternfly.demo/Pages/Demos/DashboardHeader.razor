<Masthead>
  <MastheadToggle>
    <PageToggleButton AriaLabel="Global navigation" IsNavOpen="@IsNavOpen" OnNavToggle="@NavToggleHandler">
      <BarsIcon />
    </PageToggleButton>
  </MastheadToggle>
  <MastheadMain>
    <MastheadBrand>
      <Brand
        Widths="@BrandWidths"
        Src="assets/images/logo__pf--reverse--base.png"
        Alt="Fallback patternFly default logo"
      >
        <source media="(min-width: 768px)" srcSet="assets/images/logo__pf--reverse-on-md.svg" />
        <source srcSet="assets/images/logo__pf--reverse--base.svg" />
      </Brand>
    </MastheadBrand>
  </MastheadMain>
  <MastheadContent>
    <Toolbar id="toolbar" IsFullHeight IsStatic>
      <ToolbarContent>
        <ToolbarGroup
          Variant="ToolbarGroupVariant.IconButtonGroup"
          Alignment="@(new () { Default = Alignment.Right })"
          Spacer="@(new () { Default = ToolbarSpacer.None, Medium = ToolbarSpacer.Medium })"
        >
          <ToolbarItem>
            <Button AriaLabel="Notifications" Variant="ButtonVariant.Plain">
              <Icon>
                <BellIcon />
              </Icon>
            </Button>
          </ToolbarItem>
          <ToolbarGroup
            Variant="ToolbarGroupVariant.IconButtonGroup"
            Visibility="@(new () { Default = Visibility.Hidden, Large = Visibility.Visible })"
          >
            <ToolbarItem Visibility="@(new () { Default = Visibility.Hidden, Small = Visibility.Hidden, Large = Visibility.Visible })">
              @* <ApplicationLauncher
                onSelect={this.onAppLauncherSelect}
                onToggle={this.onAppLauncherToggle}
                isOpen={isAppLauncherOpen}
                items={appLauncherItems}
              /> *@
            </ToolbarItem>
            <ToolbarItem>
              <Button AriaLabel="Settings" Variant="ButtonVariant.Plain">
                <CogIcon />
              </Button>
            </ToolbarItem>
            <ToolbarItem>
              <Button AriaLabel="Help" Variant="ButtonVariant.Plain">
                <QuestionCircleIcon />
              </Button>
            </ToolbarItem>
          </ToolbarGroup>
          <ToolbarItem Visibility="@(new () { Default = Visibility.Hidden, Small = Visibility.Visible })">
            <Dropdown IsFullHeight>
              <Toggle>
                <DropdownToggle>
                  <Icon>
                    <Avatar Src="assets/images/img_avatar.svg" Alt="Avatar" />
                  </Icon>
                  <ChildContent>Ned Username</ChildContent>
                </DropdownToggle>
              </Toggle>
              <DropdownItems>
                <DropdownGroup @key="1">
                  <DropdownItem @key="2">My profile</DropdownItem>
                  <DropdownItem @key="3" Component="button">
                    User management
                  </DropdownItem>
                  <DropdownItem @key="4">Logout</DropdownItem>
                </DropdownGroup>
              </DropdownItems>
            </Dropdown>
          </ToolbarItem>
        </ToolbarGroup>
      </ToolbarContent>
    </Toolbar>
  </MastheadContent>
</Masthead>

@code {
  [Parameter] public bool IsNavOpen { get; set; }
  [Parameter] public bool IsManagedSidebar { get; set; }
  [Parameter] public EventCallback<bool> OnNavToggle { get; set; }

  private BrandWidthModifiers BrandWidths => new ()
  {
    Default   = "180px",
    ExtraLarge2 = "220px"
  };

  private async Task NavToggleHandler(bool isNavOpen)
  {
    IsNavOpen = isNavOpen;
    await OnNavToggle.InvokeAsync(IsNavOpen);
  }
}
