@implements IAsyncDisposable
@inject IJSRuntime JSRuntime

<pre class="pf-m-redhatmono-font language-aspnet" style="max-height: 400px">
  <code class="language-aspnet">
    @RenderedCodeBlock
  </code>
</pre>

@code {
  [Parameter] public string Code { get; set; }

  private MarkupString RenderedCodeBlock { get; set; }

  private Lazy<Task<IJSObjectReference>> _moduleTask;

  public async ValueTask DisposeAsync()
  {
    if (_moduleTask is not null)
    {
      var module = await _moduleTask.Value;
      await module.DisposeAsync();
    }
  }

  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();

    _moduleTask = new Lazy<Task<IJSObjectReference>>(() => JSRuntime.InvokeAsync<IJSObjectReference>(
          "import", "./prismjs/highligh.js").AsTask());

    var module = await _moduleTask.Value;
    var renderedCodeBlock = await module.InvokeAsync<string>("highlight", Code);

    RenderedCodeBlock = new MarkupString(renderedCodeBlock);
  }
}