@namespace Blatternfly.Components

<Button
  Type="ButtonType.Button"
  Variant="ButtonVariant.Control"
  OnClick="@OnClick"
  id="@id"
  AriaLabel="@AriaLabel"
  aria-labelledby="@AriaLabelledBy"
  aria-controls="@AriaControls"
  aria-expanded="@AriaExpanded"
  @attributes="AdditionalAttributes"
>
  @if (IsExpanded)
  {
    <AngleDownIcon aria-hidden="true" />
  }
  else
  {
    <AngleRightIcon aria-hidden="true" />
  }
</Button>

@code {
  /// Additional attributes that will be applied to the component.
  [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

  /// Content rendered inside the component.
  [Parameter] public RenderFragment ChildContent { get; set; }

  [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
  [Parameter] public string id { get; set; }
  [Parameter] public string TextId { get; set; }
  [Parameter] public string ContentId { get; set; }
  [Parameter] public string AriaLabel { get; set; }
  [Parameter] public bool IsExpanded { get; set; }

  private string AriaLabelledBy { get => $"{id} {TextId}"; }
  private string AriaControls   { get => $"{id} {ContentId}"; }
  private string AriaExpanded   { get => IsExpanded ? "true" : "false"; }
}